// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  profile   Profile?
  createdAt DateTime @default(now())
  reviews   Review[]
}

model Profile {
  id        String  @id @default(uuid()) @db.Uuid
  bio       String?
  avatarUrl String?
  phone     String?
  address   String?
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique @db.Uuid
}

model Review {
  id        String  @id @default(uuid()) @db.Uuid
  title     String
  content   String
  rating    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.Uuid
}

model Product {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  createdAt   DateTime     @default(now())
  price       Float
  sale        Boolean      @default(false)
  avilibility Availibility
  reviews     Review[]
  tags        Tag[]
  description Description?
}

model Description {
  id        Int     @id @default(autoincrement())
  content   String
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @unique
}

model Tag {
  id       Int       @id @default(autoincrement())
  content  String
  products Product[]
}

enum Availibility {
  IN_STORE
  ONLINE
}
